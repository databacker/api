openapi: 3.0.0
info:
  title: Databack API
  description: API for communications and administration of databacker instances
  version: "1.0.0"

servers:
  - url: /
    description: download of configuration by databacker instances

security:
  - JWT: []

paths:
  /config/{instance}:
    get:
      description: Returns the configuration for a specific databacker instance identified by ID
      parameters:
        - in: path
          name: instance
          schema:
            type: string
          required: true
          description: Unique ID of the databacker instance whose config should be retrieved
      responses:
        '200':
          description: successfully authenticated and found config for a databacker instance
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/BaseConfig'
        '404':
          description: databacker instance not found, or unknown to user
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object 
                properties:           
                  message:
                    type: string

  /telemetry/{instance}/log:
    get:
      description: get the ability to log to this endpoint, given credentials
      parameters:
        - in: path
          name: instance
          schema:
            type: string
          required: true
          description: Unique ID of the databacker instance for whom this log is generated
      responses:
        '200':
          description: successfully authenticated and can send logs
          content:
            application/json:
              schema:
                type: object
                properties:
                  log:
                    type: string
        '404':
          description: databacker instance not found, or unknown to user
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object 
                properties:           
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object 
                properties:           
                  message:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object 
                properties:           
                  message:
                    type: string
    post:
      description: upload logs from a databacker instance
      parameters:
        - in: path
          name: instance
          schema:
            type: string
          required: true
          description: Unique ID of the databacker instance for whom the log is being uploaded
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas.yaml#/components/schemas/Log'
      responses:
        '201':
          description: successfully posted backup log, will return no data. Reference to the log ID is in the Location header.
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object 
                properties:    
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object 
                properties:           
                  message:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object 
                properties:           
                  message:
                    type: string
                  
  /admin/instances:
    get:
      description: list all of the instances for one or more accounts
      parameters:
        - in: query
          name: account
          schema:
            type: string
          # Using the default serialization for query parameters:
          # style=form, explode=false, allowReserved=false
          required: true
          description: Account IDs for which to retrieve list of instances
      responses:
        '404':
          description: no instances available
        '200':
          description: list of instances for my account
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string # just list of IDs
    post:
      description: create a new licensed databacker instance
      parameters:
        - in: query
          name: account
          schema:
            type: string
          # Using the default serialization for query parameters:
          # style=form, explode=false, allowReserved=false
          required: true
          description: Account ID for which to create a new instance
      requestBody:
        description: information for new licensed databacker instance
        content:
          application/json:
            schema:
              $ref: './schemas.yaml#/components/schemas/NewInstance'
      responses:
        '201':
          description: successfully created instance
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/InstanceBody'  # returns the body created
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object 
                properties:           
                  message:
                    type: string
        '422':
          description: Quota exceeded
          content:
            application/json:
              schema:
                type: object 
                properties:           
                  message:
                    type: string
  /admin/instances/{instance}:
    get:
      description: get information about a specific instance
      parameters:
        - in: path
          name: instance
          schema:
            type: string
          required: true
          description: Unique ID of the databacker instance whose information should be retrieved
      responses:
        '404':
          description: instance not found
        '200':
          description: details of the instance for my account
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/InstanceBody'

  /admin/instances/{instance}/logs:
    get:
      description: get list of backup logs for a specific instance
      parameters:
        - in: path
          name: instance
          schema:
            type: string
          required: true
          description: Unique ID of the databacker instance whose information should be retrieved
      responses:
        '404':
          description: instance not found
        '200':
          description: list of backup logs for a specific instance
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './schemas.yaml#/components/schemas/LogSummary'

  /admin/logs/{log}:
    get:
      description: get the backup logs for a specific backup run
      parameters:
        - in: path
          name: log
          schema:
            type: string
          required: true
          description: Unique ID of the backup whose information should be retrieved
      responses:
        '404':
          description: instance not found
        '200':
          description: backup logs for a specific backup run, streamed
          content:
            image/png: {}
